{"version":3,"sources":["C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/$_lazy_route_resource lazy","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/app.component.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/app.module.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/about.component.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/auth.service.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/welcome.component.css","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/welcome.component.html","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/welcome.component.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/nav/nav.component.css","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/nav/nav.component.html","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/nav/nav.component.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/product.component.css","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/product.component.html","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/product.component.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/productnav.component.css","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/productnav.component.html","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/productnav.component.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/routes.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/users/register.component.html","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/users/register.component.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/assets/environments/environment.prod.ts","C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;;;;;;;;;;;;;ACV0C;AAY1C;IACC;IAAe,CAAC;IADJ,YAAY;QATxB,wEAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,QAAQ,EAAE,6EAKT;SACF,CAAC;;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACwB;AACnB;AACS;AACb;AAGK;AACI;AACS;AACJ;AACK;AACM;AACP;AAEzB;AACa;AAuBhD;IAAA;IAAyB,CAAC;IAAb,SAAS;QArBrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,wEAAY;gBACZ,iFAAgB;gBAChB,6EAAc;gBACd,qFAAgB;gBAChB,2FAAmB;gBACnB,qFAAiB;aAClB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,2EAAmB;gBACnB,iEAAU;gBACV,8EAAgB;gBAChB,qEAAY,CAAC,OAAO,CAAC,2DAAS,CAAC;aAChC;YACD,SAAS,EAAE,CAAE,wEAAW,CAAE;YAC1B,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;ACxCkB;AACG;AAa3C;IACE,wBAAoB,IAAkB;QAAlB,SAAI,GAAJ,IAAI,CAAc;IAAE,CAAC;IACzC,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC9B,CAAC;IAJU,cAAc;QAZ1B,wEAAS,CAAC;YACP,QAAQ,EAAC,0LAQR;SACJ,CAAC;yCAG2B,kEAAW;OAD3B,cAAc,CAK1B;IAAD,qBAAC;CAAA;AAL0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdgB;AACuC;AAErC;AACV;AACF;AACH;AACC;AACC;AAGhC,IAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,yEAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,eAAe,EAAE,eAAe;KACjC,CAAC;CACD,CAAC;AAGJ;IAOE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAL5B,aAAQ,GAAG,iCAAiC,CAAC;QAE7C,mBAAc,GAAY,KAAK,CAAC;IAGC,CAAC;IAExC,8BAAQ,GAAR;QACG,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,KAAK,GAAG,YAAY,IAAI,YAAY,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,QAAQ,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IACD,+BAAS,GAAT,UAAU,QAAgB,EAAE,QAAgB;QAA5C,iBAsBA;QArBE,IAAI,SAAS,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;QAExD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC;aACrF,GAAG,CAAC,UAAC,QAAkB;YACf,0DAA0D;YAC1D,IAAI,KAAK,GAAG,QAAQ,CAAC;YAErB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;gBACnB,8FAA8F;gBAC9F,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBACzF,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAE7E,2CAA2C;gBAC3C,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,wCAAwC;gBACxC,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC,CAAC,CAAC;IAEZ,CAAC;IAEA,qCAAe,GAAf;QACK,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC;IAC1B,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAI;QACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,EAAE,WAAW,CAAC;aACrD,EAAE,CAAC,cAAI;YACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;YACd,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAE;IAER,CAAC;IAED,oCAAc,GAAd;QACI,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACnE,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;IAEjC,CAAC;IACD,4BAAM,GAAN;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAEzC,CAAC;IACO,iCAAW,GAAnB,UAAoB,GAAsB;QACtC,oFAAoF;QACpF,4CAA4C;QAC5C,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC;YAC7B,kEAAkE;YAClE,YAAY,GAAG,wBAAsB,GAAG,CAAC,KAAK,CAAC,OAAS,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,sDAAsD;YACtD,6DAA6D;YAC7D,YAAY,GAAG,2BAAyB,GAAG,CAAC,MAAM,4BAAuB,GAAG,CAAC,OAAS,CAAC;QAC3F,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5B,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IA9EQ,WAAW;QADvB,yEAAU,EAAE;yCAQe,wEAAU;OAPzB,WAAW,CAgFvB;IAAD,kBAAC;CAAA;AAhFuB;AAiFxB,8CAA8C;AAC1C,wEAAwE;AACxE,4DAA4D;AAC5D,+DAA+D;AAE/D,0CAA0C;AAC1C,mEAAmE;AACnE,oBAAoB;AACpB,6BAA6B;AAC7B,iBAAiB;AACjB,uCAAuC;AACvC,6CAA6C;AAC7C,0BAA0B;AAC1B,mCAAmC;AACnC,UAAU;AACV,IAAI;;;;;;;;ACnHR;AACA;;;AAGA;AACA,iDAAkD,wBAAwB,iBAAiB,cAAc,eAAe,kBAAkB,kBAAkB,iBAAiB,mBAAmB,kBAAkB,+BAA+B,wBAAwB,gCAAgC,mFAAmF,mFAAmF,KAAK,YAAY,cAAc,mBAAmB,iBAAiB,aAAa,sBAAsB,0BAA0B,cAAc,kBAAkB,EAAE,eAAe,gBAAgB,EAAE,qBAAqB,iBAAiB,EAAE,+BAA+B,uBAAuB,wBAAwB,2BAA2B,KAAK,+BAA+B,yBAAyB,wBAAwB,2BAA2B,KAAK,sBAAsB,oBAAoB,qBAAqB,KAAK,aAAa,mBAAmB,4BAA4B,KAAK;;AAE7hC;;;AAGA;AACA,2C;;;;;;;ACXA,qKAAqK,WAAW,6MAA6M,gFAAgF,0XAA0X,qFAAqF,mxBAAmxB,cAAc,sMAAsM,WAAW,qRAAqR,mE;;;;;;;;;;;;;;;;;;;;ACAznE;AAEC;AAO3C;IAMI,0BAAqB,WAAwB,EAAU,IAAiB;QAAnD,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QALjE,cAAS,GAAW,SAAS,CAAC;QACrC,mBAAc,GAAW,IAAI,CAAC;QAC9B,iBAAY,GAAW,IAAI,CAAC;QAC5B,mBAAc,GAAa,KAAK,CAAC;IAEyC,CAAC;IAE3E,mCAAQ,GAAR;QACU,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IACtD,CAAC;IAED,gCAAK,GAAL,UAAM,UAAU;QAAhB,iBAaC;QAZE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC;aAChE,SAAS,CAAC,cAAI;YACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACrB,EAAE,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACN,KAAI,CAAC,YAAY,GAAG,2BAA2B,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,KAAI,CAAC,cAAc,GAAG,gDAAgD,CAAC;YAC7E,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,iCAAM,GAAN;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IA7BQ,gBAAgB;QAL5B,wEAAS,CAAC;;;SAIV,CAAC;yCAOoC,kEAAW,EAAgB,kEAAW;OAN/D,gBAAgB,CA8B5B;IAAD,uBAAC;CAAA;AA9B4B;;;;;;;;ACT7B;AACA;;;AAGA;AACA,kCAAmC,2BAA2B,oBAAoB,qBAAqB,eAAe,gBAAgB,qBAAqB,2DAA2D,2DAA2D,KAAK,oBAAoB,kCAAkC,KAAK,sBAAsB,8BAA8B,kBAAkB,kCAAkC,uBAAuB,wBAAwB,uCAAuC,wBAAwB,KAAK,4BAA4B,oBAAoB,OAAO,sBAAsB,8BAA8B,mBAAmB,8BAA8B,uBAAuB,wBAAwB,uCAAuC,wBAAwB,KAAK,mBAAmB,qBAAqB,KAAK;;AAEx2B;;;AAGA;AACA,2C;;;;;;;ACXA,8qBAA8qB,OAAO,wvBAAwvB,YAAY,uT;;;;;;;;;;;;;;;;;;;;ACAx4C;AAED;AAQhD;IAIA,sBAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QAHrC,UAAK,GAAG,WAAW,CAAC;IAIpB,CAAC;IACD,+BAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC9C,CAAC;IACL,CAAC;IAXY,YAAY;QANxB,wEAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAMwB,uEAAW;OAJxB,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;ACVzB;AACA;;;AAGA;AACA,qCAAsC,yBAAyB,wBAAwB,4BAA4B,MAAM;;AAEzH;;;AAGA;AACA,2C;;;;;;;ACXA,kKAAkK,WAAW,mqBAAmqB,mBAAmB,+BAA+B,qBAAqB,+BAA+B,qBAAqB,+BAA+B,qBAAqB,+BAA+B,eAAe,+BAA+B,qBAAqB,uI;;;;;;;;;;;;;;;;ACA1jC;AAMvC;IALA;QAMQ,cAAS,GAAW,eAAe,CAAC;QAE3C,aAAQ,GAAS;YACR;gBACF,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,WAAW;gBAC1B,aAAa,EAAE,UAAU;gBACzB,aAAa,EAAE,gBAAgB;gBAC/B,aAAa,EAAE,uCAAuC;gBACtD,OAAO,EAAE,KAAK;aAEjB;YACD;gBACI,WAAW,EAAE,CAAC;gBACd,aAAa,EAAE,aAAa;gBAC5B,aAAa,EAAE,UAAU;gBACzB,aAAa,EAAE,gBAAgB;gBAC/B,aAAa,EAAE,wCAAwC;gBACvD,OAAO,EAAE,KAAK;aACjB;SACH,CAAC;IACH,CAAC;IAtBY,gBAAgB;QAL5B,wEAAS,CAAC;;;SAIV,CAAC;OACW,gBAAgB,CAsB5B;IAAD,uBAAC;CAAA;AAtB4B;;;;;;;;ACN7B;AACA;;;AAGA;AACA,kCAAmC,qBAAqB,yBAAyB,uBAAuB,4BAA4B,mBAAmB,kCAAkC,kBAAkB,KAAK,sBAAsB,qBAAqB,KAAK,cAAc,iBAAiB,KAAK;;AAEpS;;;AAGA;AACA,2C;;;;;;;ACXA,mnBAAmnB,OAAO,of;;;;;;;;;;;;;;;;ACAjlB;AAQzC;IANA;QAOA,UAAK,GAAG,cAAc,CAAC;IACvB,CAAC;IAFY,mBAAmB;QAN/B,wEAAS,CAAC;YACP,QAAQ,EAAE,QAAQ;;;SAGrB,CAAC;OAEW,mBAAmB,CAE/B;IAAD,0BAAC;CAAA;AAF+B;;;;;;;;;;;;;;ACN4B;AACL;AACM;AACA;AAEtD,IAAM,SAAS,GAAU;IAChC,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,iFAAgB,EAAC;IAC9C,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,6EAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,oFAAgB,EAAC;IAC9C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,oFAAiB,EAAC;IAChD,EAAC,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,EAAC;CAC9C;;;;;;;;ACbD,ibAAib,wBAAwB,6UAA6U,wBAAwB,0UAA0U,2BAA2B,80BAA80B,OAAO,qwBAAqwB,4BAA4B,kF;;;;;;;;;;;;;;;;;;;;;;ACAxtF;AACgC;AAC1C;AAEU;AAWjD;IAWI,2BAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAH5D,YAAO,GAAG,KAAK,CAAC;QAChB,WAAM,GAAG,KAAK,CAAC;IAEgD,CAAC;IAEhE,oCAAQ,GAAR;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,KAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,GAAE,IAAI,mEAAW,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,IAAI,mEAAW,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,iEAAS,CAAC;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAG,IAAI,CAAC,KAAK;YAClB,GAAG,EAAG,IAAI,CAAC,GAAG;SACf,CAAC,CAAC;IACP,CAAC;IACD,yCAAa,GAAb;QACG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IACnD,CAAC;IAED,yCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC1D,CAAC;IAGA,4CAAgB,GAAhB;QACG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC1D,CAAC;IAED,wCAAY,GAAZ,UAAa,WAAW;QAAxB,iBAaC;QAXC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;iBAC9B,SAAS,CAAC,cAAI;gBACV,EAAE,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7B,CAAC;YACT,CAAC,CAAC,CAAC;QACV,CAAC;IACF,CAAC;IAvDQ,iBAAiB;QAR7B,wEAAS,CAAC;;YAEP,MAAM,EAAC,CAAC,6LAIP,CAAC;SACL,CAAC;yCAY2B,uEAAW,EAAkB,+DAAM;OAXnD,iBAAiB,CAyD7B;IAAD,wBAAC;CAAA;AAzD6B;;;;;;;;;;ACfvB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;;;;;;;;;;;;;;ACF6C;AAC4B;AAE9B;AACwB;AAErE,EAAE,CAAC,CAAC,0FAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'pm-root',\n  template: `\n   <nav-root></nav-root>\n   <router-outlet></router-outlet>\n \n    \n  ` \n})\nexport class AppComponent {\n constructor() {} \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { HttpClientModule} from '@angular/common/http';\nimport { HttpModule } from '@angular/http'\n\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { AboutComponent } from './home/about.component';\nimport {ProductComponent} from './product/product.component';\nimport {ProductnavComponent} from './product/productnav.component';\nimport {RegisterComponent} from'./users/register.component';\n\nimport {appRoutes} from './routes';\nimport {AuthService} from './home/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    WelcomeComponent,\n    AboutComponent,\n    ProductComponent,\n    ProductnavComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ AuthService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/app.module.ts","import {Component} from '@angular/core';\r\nimport {AuthService} from './auth.service';\r\n@Component({\r\n    template:`\r\n    <div class=\"container\"> \r\n    <div class=\"jumbotron\">\r\n      <div class=\"jumbotron-content\">\r\n    <h2> Welcome to MediHouse </h2> \r\n    </div>\r\n    </div>\r\n    </div>\r\n    `\r\n})\r\n\r\nexport class AboutComponent {\r\n  constructor(private auth : AuthService){}\r\n  ngOnInit() {\r\n    this.auth.isAuthenticated();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/about.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport {Response} from '@angular/http'\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/of';\r\n\r\nimport {IUser} from './user.model'\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json',\r\n    'Authorization': 'my-auth-token'\r\n  })\r\n  };\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n \r\n  private _userUrl = 'http://localhost:3000/api/Users';\r\n  public currentUser: String ;\r\n  private loggingsuccess: boolean = false;\r\n  public token: any;\r\n  \r\n  constructor(private http: HttpClient) {  }\r\n\r\n    ngOnInit(){\r\n       var lcurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n       this.token = lcurrentUser && lcurrentUser.token;\r\n       this.currentUser = lcurrentUser.username;\r\n       console.log(this.currentUser);\r\n    }\r\n    loginUser(userName: string, password: string) {\r\n      let loginInfo = { email: userName, password: password };\r\n\r\n      return this.http.post(this._userUrl + '/login', JSON.stringify(loginInfo), httpOptions)\r\n       .map((response: Response) => {\r\n                // login successful if there's a jwt token in the response\r\n                let token = response;\r\n               \r\n                if (token) {\r\n                    this.token = token;\r\n                    // store username and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.setItem('currentUser', JSON.stringify({ username: userName, token: token }));\r\n                     this.currentUser = JSON.parse(localStorage.getItem('currentUser')).username;   \r\n                            \r\n                    // return true to indicate successful login\r\n                    return true;\r\n                } else {\r\n                    // return false to indicate failed login\r\n                    return false;\r\n                }\r\n            });\r\n      \r\n   }\r\n \r\n    isAuthenticated(){\r\n         var lcurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        return !!lcurrentUser;\r\n    }\r\n\r\n    saveUser(user){\r\n        return this.http.post(this._userUrl,user, httpOptions)\r\n        .do(resp => {\r\n            console.log(resp);\r\n        }).catch(error => {\r\n        return Observable.throw(Error);\r\n        }) ;\r\n       \r\n    }\r\n\r\n    getCurrentUser(){\r\n        var lcurrentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        return lcurrentUser.username;\r\n\r\n    }  \r\n    logout() {\r\n      this.token = null;\r\n      localStorage.removeItem('currentUser');\r\n  \r\n    } \r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof Error) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return Observable.throw(errorMessage);\r\n    }\r\n\r\n}\r\n//validateUser(email:String, password:String){\r\n    //     let headers = new Headers({ 'Content-Type': 'application/json'});\r\n    //     let options = new RequestOptions({headers: headers});\r\n    //     let loginInfo = { username: email, password: password };\r\n\r\n    //     return this.http.get(this._userUrl)\r\n    //     .map((users: IUser[]) => users.find(u => u.email === email))\r\n    //     .do(resp => {\r\n    //         console.log(resp);\r\n    //     if(resp) {\r\n    //         this.loggingsuccess  = true;\r\n    //         this.currentUser = <IUser>resp   }\r\n    //     }).catch(error => {\r\n    //     return Observable.of(false);\r\n    //     }) \r\n    // }\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/auth.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.jumbotron-content {\\r\\n  position:relative;\\r\\n  right: 10%;\\r\\n  left: 0;\\r\\n  top: 20%;\\r\\n  bottom: 10%;\\r\\n  padding:2em;\\r\\n  width: 90%;\\r\\n  height: 100%;\\r\\n  color: #333;\\r\\n  background-color:#fafbfc;\\r\\n  border-radius: 1%;\\r\\n  border: 1px solid #DDDDDD;\\r\\n  -webkit-box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);\\r\\n          box-shadow: 0 2px 2px 0 rgba(0,0,0,0.16), 0 0 0 1px rgba(0,0,0,0.08);\\r\\n}\\r\\n\\r\\nem {color:#E05C65; padding-left:10px; font-size: 10px; float:right}\\r\\n\\r\\n.error input {background-color:#E3C3C5;}\\r\\n\\r\\nform { margin-top: 10px; }\\r\\n\\r\\nlabel { display: block; }\\r\\n\\r\\n.form-group { margin-top: 5px; }\\r\\n\\r\\n.jumbotron-content h2 {\\r\\n  text-align: Left;\\r\\n  font-size: 1.75em;\\r\\n  margin-bottom: 0.5em;\\r\\n}\\r\\n\\r\\n.jumbotron-content h1 {\\r\\n  text-align: center;\\r\\n  font-size: 1.75em;\\r\\n  margin-bottom: 0.5em;\\r\\n}\\r\\n\\r\\n.jumbotron p {\\r\\n  margin-top: 0;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n.btn{\\r\\n  margin: 10px;\\r\\n  min-inline-size: 20px;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/welcome.component.css\n// module id = ../../../../../src/app/home/welcome.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\"> \\n    <div class=\\\"jumbotron\\\" *ngIf = \\\"!authuser\\\">\\n        <div class=\\\"jumbotron-content col-md-8\\\">\\n        <h2>{{pageTitle}}</h2>\\n        <p>Please Enter Login Details</p>\\n        <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" class=\\\"col-md-6\\\">\\n         \\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'error': loginForm.controls.email?.invalid && loginForm.controls.email?.touched}\\\">\\n            <label for=\\\"email\\\">Email: <em *ngIf=\\\"loginForm.controls.email?.invalid && loginForm.controls.email?.touched\\\">Required</em></label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"shop@gmail.com\\\" required\\n            (ngModel)=\\\"email\\\">\\n          </div>\\n         \\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'error': loginForm.controls.password?.invalid && loginForm.controls.email?.untouched}\\\">\\n            <label for=\\\"password\\\">Password: <em *ngIf=\\\"loginForm.controls.password?.invalid && loginForm.controls.password?.touched\\\">Required</em></label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"admin\\\" (ngModel)=\\\"password\\\" required>\\n          </div>\\n\\n          <!-- authnticate-->\\n          <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary\\\" [disabled]=\\\"loginForm.invalid\\\">Login </button>\\n\\n          <button type=\\\"button\\\" class=\\\"btn btn-lg btn-success pull-right\\\" routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\" >Register</button>\\n          <div *ngIf=\\\"errorMessage\\\">\\n            <span>\\n            <a> <em class=\\\"error\\\" style=\\\"font-size:10px\\\">Forget Password?</em> </a>\\n            <h2>{{errorMessage}}</h2>\\n            </span>\\n          </div> \\n        </form>\\n      </div>\\n      </div>\\n      <div class=\\\"jumbotron\\\" *ngIf = \\\"authuser\\\">\\n        <div class=\\\"container\\\">\\n          <h2> {{pageTitle}}</h2>\\n          <div class=\\\"row\\\">\\n            <h6 class=\\\"text-success col-md-6\\\"> This is template </h6>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <p><a class=\\\"btn btn-primary btn-lg\\\" routerLink=\\\"/product\\\" routerLinkActive=\\\"active\\\">Proeed &raquo;</a>  \\n            </p>\\n          </div>\\n      </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/welcome.component.html\n// module id = ../../../../../src/app/home/welcome.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Component({\n    templateUrl: './welcome.component.html',\n    styleUrls: ['./welcome.component.css']\n    \n})\nexport class WelcomeComponent {\n    public pageTitle: string = 'Welcome';\n    welcomeMessage: String = null;\n    errorMessage: String = null;\n    signSuccessful : boolean = false;\n    authuser:any;\n    constructor (private authService: AuthService, private auth: AuthService){}\n    \n    ngOnInit(){\n              this.authuser = this.auth.isAuthenticated();\n    }\n    \n    login(formValues): void{\n       this.authService.loginUser(formValues.email, formValues.password)\n       .subscribe(resp => {\n           console.log(resp);\n        if(!resp) {\n             this.errorMessage = \"Wrong email and password!\";\n        } else {\n           \n            this.signSuccessful = true;\n            this.errorMessage = null;\n            this.welcomeMessage = \"Welcome User to store, Please Click on Proceed\";\n      }\n     });\n    }\n       \n    logout(){\n        this.authService.logout();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/home/welcome.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".navbar {\\r\\n    background:#F8F8F8;\\r\\n    width: 100%;\\r\\n    height: 60px;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    z-index: 100;\\r\\n    -webkit-box-shadow: 0 5px 5px 0 rgba(0, 0, 0, 0.3);\\r\\n            box-shadow: 0 5px 5px 0 rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.container {\\r\\n    padding: 12px 0 10px 20px;\\r\\n}\\r\\n\\r\\n.navbar li a {\\r\\n    display: inline-block;\\r\\n    padding:0;\\r\\n    margin: 5px 20px 2px 20px;\\r\\n    color: #11548f;\\r\\n    cursor: pointer;\\r\\n    letter-spacing: 1px !important;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.navbar li a:hover {\\r\\n    color:green;\\r\\n  }\\r\\n\\r\\n.navbar-brand{\\r\\n    display: inline-block;\\r\\n    padding: 0;\\r\\n    margin: 0px 5px 0 5px;\\r\\n    color: #11548f;\\r\\n    cursor: pointer;\\r\\n    letter-spacing: 1px !important;\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\n.glyphicon{\\r\\n    padding: 1pt;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/nav/nav.component.css\n// module id = ../../../../../src/app/nav/nav.component.css\n// module chunks = main","module.exports = \" <nav class=\\\"navbar navbar-toggable-md navbar-inverse navbar-fixed-top bg-inverse\\\" >\\r\\n     <div class=\\\"container\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" \\r\\n         data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n          </button>\\r\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><i class=\\\"fa fa-hospital-o custom\\\"></i>{{title}}</a>\\r\\n          </div> \\r\\n        <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse pull-right\\\">\\r\\n          <ul class=\\\"nav navbar-nav\\\">\\r\\n            <li class=\\\"home\\\"><a routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">\\r\\n             <span class=\\\"glyphicon glyphicon-home\\\"></span>Home</a></li>\\r\\n            <li><a routerLink=\\\"/product\\\"> <span class=\\\"glyphicon glyphicon-shopping-cart\\\"></span>Product</a></li>\\r\\n                   \\r\\n             <li> <a *ngIf=\\\"!authuser\\\" routerLink=\\\"/welcome\\\">\\r\\n             <span class=\\\"glyphicon glyphicon-log-in\\\"></span>Login </a></li> \\r\\n             <li> <a *ngIf=\\\"authuser\\\" routerLink=\\\"/product\\\"> \\r\\n             <span class=\\\"glyphicon glyphicon-user\\\"></span>\\r\\n             {{curentuser}} </a></li>\\r\\n             <li> <a *ngIf=\\\"authuser\\\" (click)=\\\"auth.logout()\\\"> \\r\\n             <span class=\\\"glyphicon glyphicon-log-out\\\">Logout</span>\\r\\n             </a></li>\\r\\n           </ul>\\r\\n         \\r\\n         </div><!--/.nav-collapse -->\\r\\n           \\r\\n      </div>\\r\\n      \\r\\n    </nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/nav/nav.component.html\n// module id = ../../../../../src/app/nav/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core'\r\n\r\nimport {AuthService} from '../home/auth.service'\r\n\r\n@Component({\r\n    selector: 'nav-root',\r\n    templateUrl: './nav.component.html',\r\n    styleUrls: ['./nav.component.css']\r\n})\r\n\r\nexport class NavComponent implements OnInit {\r\ntitle = 'MediHouse';\r\nauthuser : any;\r\ncurrentuser: String;\r\nconstructor(private auth: AuthService){\r\n}\r\nngOnInit(){\r\n    this.authuser = this.auth.isAuthenticated();\r\n    if (this.authuser){\r\n    this.currentuser = this.auth.getCurrentUser();\r\n    }\r\n}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/nav/nav.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".jumbotron {\\r\\n  position: relative;\\r\\n  min-height: 400px;\\r\\n  background-size: 100%;\\r\\n }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/product.component.css\n// module id = ../../../../../src/app/product/product.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\"> \\r\\n    <pm-nav></pm-nav>\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n      <div class=\\\"jumbotron-content\\\">\\r\\n       <h4>{{pageTitle}}</h4> \\r\\n       \\r\\n       <div class=\\\"table-responsive\\\">  \\r\\n           \\r\\n       <table class=\\\"table table-sm table-hover\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                <th scope=\\\"col\\\">Product Id</th>\\r\\n                <th scope=\\\"col\\\">Product Name</th>\\r\\n                <th scope=\\\"col\\\">Product Code </th>\\r\\n                <th scope=\\\"col\\\">Release Dt </th>\\r\\n                <th scope=\\\"col\\\">Unit Cost</th>\\r\\n                <th scope=\\\"col\\\">Description</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody  *ngFor=\\\"let product of products\\\">\\r\\n                <tr>\\r\\n                <th scope=\\\"row\\\">{{product.productId}}</th>\\r\\n                <td>{{product.productName}}</td>\\r\\n                <td>{{product.productCode}}</td>\\r\\n                <td>{{product.releaseDate}}</td>\\r\\n                <td>{{product.price}}</td>\\r\\n                <td>{{product.description}}</td>\\r\\n                </tr>\\r\\n            </tbody> \\r\\n       </table> \\r\\n       </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/product.component.html\n// module id = ../../../../../src/app/product/product.component.html\n// module chunks = main","import {Component} from '@angular/core'\r\n@Component({\r\n \r\n templateUrl:'./product.component.html',\r\n styleUrls: ['./product.component.css']\r\n})\r\nexport class ProductComponent{\r\n public pageTitle: string = 'Products List';\r\n \r\n products: any[] =[\r\n          {\r\n        \"productId\": 1,\r\n        \"productName\": \"Leaf Rake\",\r\n        \"productCode\": \"GDN-0011\",\r\n        \"releaseDate\": \"March 19, 2016\",\r\n        \"description\": \"Leaf rake with 48-inch wooden handle.\",\r\n        \"price\": 19.95,\r\n        \r\n    },\r\n    {\r\n        \"productId\": 2,\r\n        \"productName\": \"Garden Cart\",\r\n        \"productCode\": \"GDN-0023\",\r\n        \"releaseDate\": \"March 18, 2016\",\r\n        \"description\": \"15 gallon capacity rolling garden cart\",\r\n        \"price\": 32.99,\r\n    }\r\n ];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/product.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".navbar {\\r\\n  margin-top: 5%;\\r\\n  position: relative;\\r\\n  min-height: 10px;\\r\\n  background-size: 100%;\\r\\n  padding: 5px;\\r\\n  background-color: lightblue;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.navbar-brand{\\r\\n  color:darkcyan;\\r\\n}\\r\\n\\r\\n.sell{\\r\\n  color: red;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/productnav.component.css\n// module id = ../../../../../src/app/product/productnav.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-toggable-md navbar-inverse bg-inverse\\\" >\\r\\n     <div class=\\\"container\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n         <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" \\r\\n         data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n            <span class=\\\"icon-bar\\\"></span>\\r\\n          </button>\\r\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\r\\n          </div> \\r\\n         <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n          <ul class=\\\"nav navbar-nav\\\">\\r\\n            <li><a class=\\\"sell\\\" routerLink=\\\"/welcome\\\" routerLinkActive=\\\"active\\\">Sell</a></li>\\r\\n            <li class=\\\"buy\\\"><a routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">Buy</a></li>\\r\\n            <li><a href=\\\"#contact\\\">List</a></li>\\r\\n            </ul>\\r\\n           \\r\\n         </div><!--/.nav-collapse -->\\r\\n      </div>\\r\\n     </nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/productnav.component.html\n// module id = ../../../../../src/app/product/productnav.component.html\n// module chunks = main","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n    selector: 'pm-nav',\r\n    templateUrl: './productnav.component.html',\r\n    styleUrls: ['./productnav.component.css']\r\n})\r\n\r\nexport class ProductnavComponent {\r\ntitle = 'Product Cart';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/product/productnav.component.ts","import {Routes} from '@angular/router';\r\n\r\nimport { WelcomeComponent } from \"./home/welcome.component\";\r\nimport {AboutComponent } from './home/about.component';\r\nimport {ProductComponent} from './product/product.component';\r\nimport {RegisterComponent} from './users/register.component';\r\n\r\nexport const appRoutes:Routes = [\r\n{path: 'welcome', component: WelcomeComponent},\r\n{path: 'about', component: AboutComponent},\r\n{path: 'product', component: ProductComponent},\r\n{path: 'register', component: RegisterComponent},\r\n{path:'', redirectTo:'/about',pathMatch:'full'}\r\n]\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/routes.ts","module.exports = \"<div class=\\\"container\\\"> \\r\\n    <div class=\\\"jumbotron\\\">\\r\\n     <div class=\\\"jumbotron-content col-md-10\\\">\\r\\n        <h3>Registration Form</h3>\\r\\n            <hr>\\r\\n          \\r\\n            <form [formGroup]=\\\"profileForm\\\" novalidate autocomplete=\\\"off\\\" (ngSubmit)=\\\"registerUser(profileForm.value)\\\" >\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\" [ngClass]='{error: !validateUname()}'>\\r\\n                    <label class=\\\"center-block\\\">Name:\\r\\n                     <em *ngIf=\\\"!validateUname()\\\">Required</em>   \\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"userName\\\">\\r\\n                    </label>\\r\\n                </div>\\r\\n                 <div class=\\\"form-group\\\" [ngClass]='{error: !validateEmail()}'>\\r\\n                    <label class=\\\"center-block\\\">Email:\\r\\n                     <em *ngIf=\\\"!validateEmail()\\\">Required</em>   \\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"email\\\">\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\" [ngClass]='{error: !validatePassword()}'>\\r\\n                    <label class=\\\"center-block\\\">Passwrod:\\r\\n                    <em *ngIf=\\\"!validatePassword()\\\">Required</em>   \\r\\n                    <input  type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"center-block\\\">City:\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"city\\\">\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"center-block\\\">State:\\r\\n                    <select class=\\\"form-control\\\" formControlName=\\\"state\\\">\\r\\n                        <option [value]=\\\"state\\\">{{state}}</option>\\r\\n                    </select>\\r\\n                    </label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"center-block\\\">Zip Code:\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"zip\\\">\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n                <button class=\\\"btn btn-primary btn-lg\\\">Submit</button>\\r\\n                <div *ngIf=\\\"failed\\\">\\r\\n                     <span>\\r\\n                    <a> <em class=\\\"errormessage\\\">Duplicate Email?</em> </a>\\r\\n                    </span>\\r\\n              </div>\\r\\n            </form>\\r\\n              \\r\\n                \\r\\n                <p class=\\\"text-muted\\\">User Details: {{ profileForm.value | json }}</p>\\r\\n               \\r\\n            </div> \\r\\n      \\r\\n     </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/users/register.component.html\n// module id = ../../../../../src/app/users/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core'\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {AuthService} from '../home/auth.service'; \r\n\r\n\r\n@Component({\r\n    templateUrl: 'register.component.html',\r\n    styles:[`\r\n     em {color:#E05C65; padding-left:10px; font-size:10px; float:right}\r\n    .error input {background-color:#E3C3C5;}\r\n    .errormessage {background-color:#E3C3C5; font-size:20px}\r\n    `],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    profileForm : FormGroup;\r\n    userName:FormControl;\r\n    email:FormControl;\r\n    password:FormControl;\r\n    city:FormControl;\r\n    state:FormControl;\r\n    zip: FormControl;\r\n    success = false;\r\n    failed = false;\r\n    \r\n    constructor(private user:AuthService, private router: Router ){}\r\n    \r\n    ngOnInit(){\r\n        this.userName = new FormControl('', Validators.required);\r\n        this.email = new FormControl('',Validators.required);\r\n        this.password = new FormControl('',Validators.required);\r\n        this.city = new FormControl('');\r\n        this.state= new FormControl('');\r\n        this.zip = new FormControl('');\r\n        this.profileForm = new FormGroup({\r\n          userName: this.userName,\r\n          email: this.email,\r\n          password: this.password,\r\n          city: this.city,\r\n          state : this.state,\r\n          zip : this.zip\r\n        });\r\n    }\r\n    validateEmail(){\r\n       return this.email.valid || this.email.untouched;\r\n    } \r\n\r\n    validateUname(){\r\n        return this.userName.valid || this.userName.untouched;\r\n    }\r\n     \r\n     \r\n     validatePassword(){\r\n        return this.password.valid || this.password.untouched;\r\n    } \r\n\r\n    registerUser(profileForm){\r\n    \r\n      if (this.profileForm.valid){\r\n       this.user.saveUser(profileForm)\r\n       .subscribe(resp => {\r\n            if(!resp) {\r\n                this.failed = true;\r\n            } else {\r\n                this.success = true;\r\n                this.router.navigate(['/about']);\r\n                    }\r\n            });\r\n     }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/app/users/register.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/assets/environments/environment.prod.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './assets/environments/environment.prod';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Rahul/Desktop/Learning/Angular 2/learn angular 2/Medical-Frontend/src/main.ts"],"sourceRoot":"webpack:///"}